services:
    postgres:
        image: postgres:13
        env_file:
            - .env
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "airflow"]
            interval: 5s
            retries: 5
        restart: always
        networks:
          - app-network

    scheduler:
        build: .
        command: scheduler
        restart: on-failure
        user: "root"
        depends_on:
            - postgres
        env_file:
            - .env
        volumes:
            - ../airflow/:/usr/local/airflow
            - ./scripts:/usr/local/airflow/scripts
            - ../../setup/conf:/usr/local/airflow/conf
        deploy:
            resources:
                limits:
                    memory: 12GB
                reservations:
                    memory: 8GB
        networks:
          - app-network

    webserver:
        build: .
        entrypoint: /usr/local/airflow/scripts/entrypoint.sh
        restart: on-failure
        depends_on:
            - postgres
            - scheduler
        env_file:
            - .env
        volumes:
            - ../airflow/:/usr/local/airflow
            - ./scripts:/usr/local/airflow/scripts
            - ../../setup/conf:/usr/local/airflow/conf

        user: "root"
        ports:
            - "8080:8080"
        healthcheck:
            test: [ "CMD-SHELL", "[ -f /home/airflow/airflow-webserver.pid ]" ]
            interval: 30s
            timeout: 30s
            retries: 3
        networks:
          - app-network

    mlflow:
      container_name: mlflow-server
      build:
        context: .
        dockerfile: mlflow.dockerfile
      ports:
        - 5012:5012
      volumes:
        - "${PWD}/../airflow/mlflow:/home/mlflow/"
      networks:
        - app-network

volumes:
  postgres-db-volume:

networks:
  app-network:
    driver: bridge